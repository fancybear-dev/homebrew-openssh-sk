name: Update Homebrew Formula for OpenSSH with YubiKey Support

on:
  schedule:
    - cron: "0 0 * * *" # Run daily at midnight UTC
  workflow_dispatch: # Allow manual triggering
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  update-formula:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Homebrew dependencies
        run: |
          brew install libfido2 openssl pkg-config autoconf automake libtool jq

      - name: Get latest OpenSSH tag
        id: get-tag
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/openssh/openssh-portable/tags | jq -r '.[0].name')
          CURRENT_TAG=$(grep 'version "' openssh-sk.rb | cut -d'"' -f2 || echo "none")
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "CURRENT_TAG=$CURRENT_TAG" >> $GITHUB_ENV
          echo "OPENSSH_VERSION=${LATEST_TAG#V_}" >> $GITHUB_ENV

      - name: Check if update is needed
        id: check-update
        run: |
          if [ "${{ env.LATEST_TAG }}" != "V_${{ env.CURRENT_TAG }}" ] && [ "${{ env.CURRENT_TAG }}" != "${{ env.OPENSSH_VERSION }}" ]; then
            echo "Update needed: ${CURRENT_TAG} -> ${OPENSSH_VERSION}"
            echo "needs_update=true" >> $GITHUB_ENV
          else
            echo "No update needed: current=${CURRENT_TAG}, latest=${OPENSSH_VERSION}"
            echo "needs_update=false" >> $GITHUB_ENV
          fi

      - name: Clone and build OpenSSH
        if: env.needs_update == 'true'
        run: |
          git clone --depth 1 --branch ${{ env.LATEST_TAG }} https://github.com/openssh/openssh-portable.git
          cd openssh-portable
          autoreconf
          ./configure --with-security-key-builtin \
            --with-libfido2=$(brew --prefix libfido2) \
            --with-ssl-dir=$(brew --prefix openssl) \
            --prefix=/tmp/openssh-install
          make
          make install

      - name: Calculate SHA256
        if: env.needs_update == 'true'
        id: calculate-sha
        run: |
          SHA256=$(curl -sL https://github.com/openssh/openssh-portable/archive/${{ env.LATEST_TAG }}.tar.gz | shasum -a 256 | cut -d' ' -f1)
          echo "SHA256=$SHA256" >> $GITHUB_ENV

      - name: Update Homebrew formula
        if: env.needs_update == 'true'
        run: |
          cat << EOF > openssh-sk.rb
          class OpensshSk < Formula
            desc "OpenSSH with security key support for YubiKeys"
            homepage "https://www.openssh.com/"
            url "https://github.com/openssh/openssh-portable/archive/${{ env.LATEST_TAG }}.tar.gz"
            version "${{ env.OPENSSH_VERSION }}"
            sha256 "${{ env.SHA256 }}"

            depends_on "libfido2"
            depends_on "openssl"
            depends_on "pkg-config" => :build
            depends_on "autoconf" => :build
            depends_on "automake" => :build
            depends_on "libtool" => :build

            def install
              system "autoreconf"
              system "./configure", "--with-security-key-builtin",
                "--with-libfido2=#{Formula['libfido2'].opt_prefix}",
                "--with-ssl-dir=#{Formula['openssl@1.1'].opt_prefix}",
                "--prefix=#{prefix}"
              system "make"
              system "make", "install"
              lib.install "sk-libfido2.dylib"
            end

            def caveats
              <<~EOS
                The sk-libfido2.dylib library is installed to #{HOMEBREW_PREFIX}/lib.
                To use with SSH, add to your ~/.zshenv:
                  export SSH_SK_PROVIDER=#{HOMEBREW_PREFIX}/lib/sk-libfido2.dylib
                Or, use: ssh -O SecurityKeyProvider=\$SSH_SK_PROVIDER user@host
              EOS
            end
          end
          EOF

      - name: Create or update README
        run: |
          cat << EOF > README.md
          # OpenSSH with YubiKey Support

          This repository provides a Homebrew formula for installing OpenSSH with YubiKey (FIDO2) support on macOS.

          ## Installation

          1. Add the tap:
             \`\`\`bash
             brew tap fancybear-dev/openssh-sk
             \`\`\`

          2. Install the formula:
             \`\`\`bash
             brew install openssh-sk
             \`\`\`

          ## About

          This repository is automatically updated with the latest OpenSSH release from the [openssh-portable](https://github.com/openssh/openssh-portable) repository, built with \`--with-security-key-builtin\` for YubiKey support.
          EOF
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add README.md
          git commit -m "Update README.md" || true
          git push origin main || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit and push formula changes
        if: env.needs_update == 'true'
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add openssh-sk.rb
          git commit -m "Update openssh-sk to ${{ env.OPENSSH_VERSION }}"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
